name: CI/CD Pipeline

on:
  push:
    branches:
      - develop  # develop 브랜치에 푸시될 때 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Install Docker Compose  # Docker Compose 설치
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Sentry Auth Token
        run: echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> $GITHUB_ENV

      - name: Enable Sentry CLI Debug Logs
        run: echo "SENTRY_LOG_LEVEL=debug" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew clean build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          DOCKER_DB_PASSWORD: ${{ secrets.DOCKER_DB_PASSWORD }}

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker-compose build
          docker-compose push
          
          docker build -t nemo-be:latest .
          docker tag nemo-be:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/nemo-be:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/nemo-be:latest
          
          docker build -t nemo-mysql:latest .
          docker tag nemo-mysql:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/nemo-mysql:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/nemo-mysql:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH 디렉토리 및 키 설정
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts || true

      - name: 서버에 SSH 접속 및 `application.yml` 파일 생성
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ~/app/config/
            echo "${{ secrets.APPLICATION_YML }}" > ~/app/config/application.yml

      - name: Set environment variables
        run: echo "MYSQL_ROOT_PASSWORD=${{ secrets.DOCKER_DB_PASSWORD }}" >> $GITHUB_ENV

      - name: Docker Compose 실행
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DOCKER_DB_PASSWORD }}
          script: |
            cd ~/app
            docker-compose pull nemo-be && \
            docker-compose up -d --no-deps nemo-be  
            
            docker-compose pull nemo-mysql && \
            docker-compose up -d --no-deps nemo-mysql

      - name: Docker mysql 컨테이너 로그 출력
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Docker 컨테이너 로그 출력" && \
            docker logs nemo-mysql
